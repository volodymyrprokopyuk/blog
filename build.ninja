rule css
  command = mkdir -p site/css $
    && cat node_modules/normalize.css/normalize.css $
    node_modules/prismjs/themes/prism.css $
    node_modules/prismjs/themes/prism-coy.css $in > $out

# build styles
build site/css/styles.css: css templates/style.css | $
  node_modules/normalize.css/normalize.css $
  node_modules/prismjs/themes/prism.css $
  node_modules/prismjs/themes/prism-coy.css

styles = site/css/styles.css

rule js
  command = mkdir -p site/js $
    && cat node_modules/prismjs/prism.js $
    node_modules/prismjs/components/prism-javascript.min.js $
    node_modules/prismjs/components/prism-elixir.min.js $in > $out

# build scripts
build site/js/scripts.js: js templates/script.js | $
  node_modules/prismjs/prism.js $
  node_modules/prismjs/components/prism-javascript.min.js $
  node_modules/prismjs/components/prism-elixir.min.js

scripts = site/js/scripts.js

rule md
  command = marked < $in > $out

rule disqus
  command = sed -e 's|#{post}|$in|g' templates/disqus.pug > $out

rule template
  command = sed -e 's|#{post}|$in|g' templates/post.pug > $out

rule post
  command = pug --path templates/base.pug < $in > $out

base = templates/base.pug
mixins = templates/mixins.pug
disqus = templates/disqus.pug
template = templates/post.pug

# build posts
post = state-manipulation-vs-value-calculation-in-programming
build posts/$post/post.html: md posts/$post/post.md
build posts/$post/disqus.js: disqus posts/$post | $disqus
build posts/$post/post.pug: template posts/$post | $template
build site/$post.html: post posts/$post/post.pug | $base $styles $scripts $
  posts/$post/post.html posts/$post/disqus.js
default site/$post.html
post = statements-vs-expressions-in-programming
build posts/$post/post.html: md posts/$post/post.md
build posts/$post/disqus.js: disqus posts/$post | $disqus
build posts/$post/post.pug: template posts/$post | $template
build site/$post.html: post posts/$post/post.pug | $base $styles $scripts $
  posts/$post/post.html posts/$post/disqus.js
default site/$post.html

rule category
  command = pug --path templates/base.pug --obj posts/posts.js < $in > $out

posts = posts/posts.js

# build categories
category = index
build site/$category.html: category posts/$category.pug | $posts $base $mixins $
  $styles $scripts
default site/$category.html
category = about
build site/$category.html: category posts/$category.pug | $posts $base $mixins $
  $styles $scripts
default site/$category.html
category = functional-programming
build site/$category.html: category posts/$category.pug | $posts $base $mixins $
  $styles $scripts
default site/$category.html

# clean posts, categories and site
rule clean
  command = rm -rf posts/*/post.html posts/*/disqus.js posts/*/post.pug $
    site/*.html site/css site/js

build clean: clean
